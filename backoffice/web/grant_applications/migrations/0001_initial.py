# Generated by Django 3.1.1 on 2020-11-18 13:00

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trade_events', '0001_initial'),
        ('sectors', '0001_initial'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GrantApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('previous_applications', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('is_already_committed_to_event', models.BooleanField(null=True)),
                ('search_term', models.CharField(max_length=500, null=True)),
                ('manual_company_type', models.CharField(choices=[('limited company', 'Limited company'), ('partnership', 'Partnership'), ('sole trader', 'Sole trader'), ('other', 'Other e.g. charity, university, publicly funded body')], max_length=20, null=True)),
                ('manual_company_name', models.CharField(max_length=500, null=True)),
                ('manual_company_address_line_1', models.CharField(max_length=100, null=True)),
                ('manual_company_address_line_2', models.CharField(max_length=100, null=True)),
                ('manual_company_address_town', models.CharField(max_length=100, null=True)),
                ('manual_company_address_county', models.CharField(max_length=100, null=True)),
                ('manual_company_address_postcode', models.CharField(max_length=10, null=True)),
                ('manual_time_trading_in_uk', models.CharField(choices=[('less than 1 year', 'Less than 1 year'), ('2 to 5 years', '2 to 5 years'), ('6 to 10 years', '6 to 10 years'), ('more than 10 years', 'More than 10 years')], max_length=20, null=True)),
                ('manual_registration_number', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator(regex='(SC|NI|[0-9]{2})[0-9]{6}')])),
                ('manual_vat_number', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator(regex='([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})')])),
                ('manual_website', models.URLField(max_length=500, null=True)),
                ('number_of_employees', models.CharField(choices=[('fewer-than-10', 'Fewer than 10'), ('10-to-49', '10 to 49'), ('50-to-249', '50 to 249'), ('250-or-more', '250 or More')], max_length=20, null=True)),
                ('is_turnover_greater_than', models.BooleanField(null=True)),
                ('applicant_full_name', models.CharField(max_length=500, null=True)),
                ('applicant_email', models.EmailField(max_length=254, null=True)),
                ('applicant_mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='GB')),
                ('job_title', models.CharField(max_length=500, null=True)),
                ('previous_years_turnover_1', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_years_turnover_2', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_years_turnover_3', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_years_export_turnover_1', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_years_export_turnover_2', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('previous_years_export_turnover_3', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('other_business_names', models.CharField(max_length=500, null=True)),
                ('products_and_services_description', models.TextField(null=True)),
                ('products_and_services_competitors', models.TextField(null=True)),
                ('has_exported_before', models.BooleanField(null=True)),
                ('has_product_or_service_for_export', models.BooleanField(null=True)),
                ('has_exported_in_last_12_months', models.BooleanField(null=True)),
                ('export_regions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('africa', 'Africa'), ('asia pacific', 'Asia-Pacific'), ('china', 'China'), ('eastern europe and central asia', 'Eastern Europe and Central Asia'), ('europe', 'Europe'), ('latin america', 'Latin America'), ('middle east', 'Middle East'), ('north america', 'North America'), ('south america', 'South America')], max_length=50), null=True, size=None)),
                ('markets_intending_on_exporting_to', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('existing', 'existing markets'), ('new', 'new markets not exported to in the last 12 months')], max_length=10), null=True, size=None)),
                ('is_in_contact_with_dit_trade_advisor', models.BooleanField(null=True)),
                ('ita_name', models.CharField(max_length=500, null=True)),
                ('ita_email', models.EmailField(max_length=254, null=True)),
                ('ita_mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='GB')),
                ('export_experience_description', models.TextField(null=True)),
                ('export_strategy', models.TextField(null=True)),
                ('interest_in_event_description', models.TextField(null=True)),
                ('is_in_contact_with_tcp', models.BooleanField(null=True)),
                ('tcp_name', models.CharField(max_length=500, null=True)),
                ('tcp_email', models.EmailField(max_length=254, null=True)),
                ('tcp_mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='GB')),
                ('is_intending_to_exhibit_as_tcp_stand', models.BooleanField(null=True)),
                ('stand_trade_name', models.CharField(max_length=500, null=True)),
                ('trade_show_experience_description', models.TextField(null=True)),
                ('additional_guidance', models.TextField(null=True)),
                ('application_summary', models.JSONField(default=list)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='companies.company')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='trade_events.event')),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sectors.sector')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StateAid',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('authority', models.CharField(max_length=500)),
                ('date_received', models.DateField()),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.CharField(max_length=500)),
                ('grant_application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='grant_applications.grantapplication')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

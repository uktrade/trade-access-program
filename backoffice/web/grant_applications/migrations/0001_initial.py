# Generated by Django 3.1.1 on 2020-10-13 15:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sectors', '0001_initial'),
        ('companies', '0001_initial'),
        ('trade_events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GrantApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('search_term', models.CharField(max_length=500)),
                ('is_based_in_uk', models.BooleanField(null=True)),
                ('is_turnover_greater_than', models.BooleanField(null=True)),
                ('applicant_full_name', models.CharField(max_length=500, null=True)),
                ('applicant_email', models.EmailField(max_length=254, null=True)),
                ('applicant_mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='GB')),
                ('applicant_position_within_business', models.CharField(choices=[('director', 'Director'), ('company-secretary', 'Company Secretary'), ('owner', 'Owner'), ('other', 'Other')], max_length=20, null=True)),
                ('is_already_committed_to_event', models.BooleanField(null=True)),
                ('is_intending_on_other_financial_support', models.BooleanField(null=True)),
                ('has_previously_applied', models.BooleanField(null=True)),
                ('previous_applications', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('is_first_exhibit_at_event', models.BooleanField(null=True)),
                ('number_of_times_exhibited_at_event', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('goods_and_services_description', models.TextField(null=True)),
                ('business_name_at_exhibit', models.CharField(max_length=500, null=True)),
                ('other_business_names', models.CharField(max_length=500, null=True)),
                ('turnover', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('number_of_employees', models.CharField(choices=[('fewer-than-10', 'Fewer than 10'), ('10-to-49', '10 to 49'), ('50-to-249', '50 to 249'), ('250-or-more', '250 or More')], max_length=20, null=True)),
                ('website', models.URLField(max_length=500, null=True)),
                ('has_exported_before', models.BooleanField(null=True)),
                ('is_planning_to_grow_exports', models.BooleanField(null=True)),
                ('is_seeking_export_opportunities', models.BooleanField(null=True)),
                ('has_received_de_minimis_aid', models.BooleanField(null=True)),
                ('de_minimis_aid_public_authority', models.CharField(blank=True, max_length=500, null=True)),
                ('de_minimis_aid_date_awarded', models.DateField(blank=True, null=True)),
                ('de_minimis_aid_amount', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('de_minimis_aid_description', models.CharField(blank=True, max_length=500, null=True)),
                ('de_minimis_aid_recipient', models.CharField(blank=True, max_length=500, null=True)),
                ('de_minimis_aid_date_received', models.DateField(blank=True, null=True)),
                ('application_summary', models.JSONField(default=list)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='companies.company')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='trade_events.event')),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sectors.sector')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
